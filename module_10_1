import threading
import time


def write_words(word_count, file_name):
    '''Записываем строки в файлы'''

    with open(file_name, 'w', encoding='utf-8') as f:
        for i in range(1, word_count + 1):
            f.write(f'Какое-то слово № {i}\n')
            time.sleep(0.1)
    print(f'Завершилась запись в файл {file_name}')


# взятие текущего времени
start_time = time.time()

write_words(10, 'example1.txt')
write_words(30, 'example2.txt')
write_words(200, 'example3.txt')
write_words(100, 'example4.txt')

# Конец замера времени
end_time = time.time()

# Фиксируем время работы функции без потока
print(f"Работа функций: {time.strftime('%H:%M:%S', time.gmtime(end_time - start_time))}")

# Взятие текущего времени
start_time = time.time()

# Созадние потоков
t_1 = threading.Thread(target=write_words, args=(10, 'example5.txt'))
t_2 = threading.Thread(target=write_words, args=(30, 'example6.txt'))
t_3 = threading.Thread(target=write_words, args=(200, 'example7.txt'))
t_4 = threading.Thread(target=write_words, args=(100, 'example8.txt'))

t_1.start()
t_2.start()
t_3.start()
t_4.start()

t_1.join()
t_2.join()
t_3.join()
t_4.join()

# Конец замера времени
end_time = time.time()

# Фиксируем время работы функции с потоком
print(f"Работа потоков: {time.strftime('%H:%M:%S', time.gmtime(end_time - start_time))}")
